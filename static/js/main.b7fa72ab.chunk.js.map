{"version":3,"sources":["files/BoucheoCajaBanco.xlsx","Component/DragAndDrop/DragAndDrop.js","Component/CvsUploader.js","Component/DragAndDrop/FileListMain.js","Component/Popup/Popup.js","Component/Popup/Popup_flotante.js","Component/SumSubset.js","Component/SubSetSum/SubSetSum2.js","Component/Checkbox/Checkbox.js","Component/XlsxUploaderV3.js","Component/Tf_Idf/Tf_Idf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DragAndDrop","Component","state","drag","dropRef","React","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","props","clearData","div","this","current","addEventListener","removeEventListener","className","style","display","position","padding","ref","dragging","classname","children","Popup","closePopUp","onClick","closePopup","titulo","contenido","SubsetSum","InputByUser","ArrayFlag","ProposedSum","a","inputByUser","arrayFlag","proposedSum","ArrayResult","isValidSubset","index","sum","remainingWeigths","i","j","printSolution","subSet","arraytemp","push","main","SubSetSum2","valor","Checkbox","Fragment","class","type","XlsxUploaderV3","opcion","showPopup","showPopupFloat","showOptions","showtable","dataBanco","data","id","fecha","cargo","abono","descripcion","loadingbancodata","selected","usedFlag","usedFlagAbono","usedFlagCargo","idmatch","idmatchAbono","idmatchCargo","typeAbono","typeCargo","dataCaja","loadingcajadata","idCajaSelect","idBancoSelect","parametro","listOptions","flag","optionSelected","listdata","positionPopup","yyyymmdd","dateIn","yyyy","getFullYear","mm","getMonth","dd","getDate","String","handleInputChange","Banco2","Caja2","f","target","reader","FileReader","onload","result","readedData","XLSX","wsname","SheetNames","ws","Sheets","dataParse","sheet_to_json","header","wsname2","ws2","dataParse2","Caja","Banco","temp","Date","toLocaleDateString","undefined","readAsBinaryString","onloadend","saveDataHandler","alert","document","body","scrollTop","documentElement","procesarData","inputsUpdated","input","tipo","loadingdata","inputByUser2","objeto","console","log","fill","then","resultado2","returnListSolutions","m","n","resultado","p","dataBancotempOptions","dataBancotempData","filter","opt","pos","dataCajatempOptions","dataCajatempData","opts","results","poss","key","colSpan","map","con","showListOptions","c","handleObjectListChange","dat","dataCajas","dataBancos","event","master","qq","oo","Bancos","ww","Cajas","pp","cuerpo","href","excelFile","size","color","fileInput","click","required","name","onChange","placeholder","handleObjectChange","restoreMatching","dibujartabla","togglePopup","bind","dibujarListaOpciones","togglePopupFlotante","Tf_Idf","txt","counts","keys","allwords","tokens","split","word","toLowerCase","tf","df","othercounts","tempcounts","tokens_","k","w","word_","word_2","wordobj","tfidf","Math","compare","b","countA","sort","Tf_Idf_function","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7fa72ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BoucheoCajaBanco.93951512.xlsx\";","import React, { Component } from 'react';\r\nimport './DragAndDrop.css';\r\n\r\nclass DragAndDrop extends Component {\r\n  state = {\r\n    drag: false\r\n  }\r\n  dropRef = React.createRef()\r\n  handleDrag = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n  handleDragIn = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.dragCounter++\r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      this.setState({drag: true})\r\n    }\r\n  }\r\n  handleDragOut = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.dragCounter--\r\n    if (this.dragCounter === 0) {\r\n      this.setState({drag: false})\r\n    }\r\n  }\r\n  handleDrop = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    this.setState({drag: false})\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      this.props.handleDrop(e.dataTransfer.files)\r\n      e.dataTransfer.clearData()\r\n      this.dragCounter = 0    \r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let div = this.dropRef.current\r\n    div.addEventListener('dragenter', this.handleDragIn)\r\n    div.addEventListener('dragleave', this.handleDragOut)\r\n    div.addEventListener('dragover', this.handleDrag)\r\n    div.addEventListener('drop', this.handleDrop)\r\n  }\r\n  componentWillUnmount() {\r\n    let div = this.dropRef.current\r\n    div.removeEventListener('dragenter', this.handleDragIn)\r\n    div.removeEventListener('dragleave', this.handleDragOut)\r\n    div.removeEventListener('dragover', this.handleDrag)\r\n    div.removeEventListener('drop', this.handleDrop)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\"\r\n        style={{display: 'inline-block', position: 'relative',padding:'2px'}}\r\n        ref={this.dropRef}\r\n      >\r\n        {this.state.dragging?\r\n          <div classname=\"Dashed\">\r\n            <div>drop here :)</div>\r\n          </div>:            \r\n        <div  className=\"noDashed\">\r\n            {this.props.children}\r\n        </div>    \r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DragAndDrop;","import React, { Component } from 'react';\r\n\r\nimport { CSVReader } from 'react-papaparse';\r\n\r\nclass CvsUploader extends Component {\r\n    handleOnDrop = (data) => {\r\n        console.log('---------------------------')\r\n        console.log(data)\r\n        console.log('---------------------------')\r\n      }\r\n    \r\n      handleOnError = (err, file, inputElem, reason) => {\r\n        console.log(err)\r\n      }\r\n    \r\n      handleOnRemoveFile = (data) => {\r\n        console.log('---------------------------')\r\n        console.log(data)\r\n        console.log('---------------------------')\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <CSVReader\r\n            onDrop={this.handleOnDrop}\r\n            onError={this.handleOnError}\r\n            addRemoveButton\r\n            onRemoveFile={this.handleOnRemoveFile}\r\n          >\r\n            <span>Drop CSV file here or click to upload.</span>\r\n          </CSVReader>\r\n        )\r\n      }\r\n    }\r\nexport default CvsUploader;\r\n","import React, { Component } from 'react'\r\nimport DragAndDrop from './DragAndDrop'\r\nimport * as XLSX from 'xlsx';\r\nclass FileListMain extends Component {\r\n    state = {\r\n        files: [\r\n            'Arrastra aquí tu archivo'\r\n\r\n        //'Coquito ABC.pdf',\r\n        ]\r\n    }\r\n    handleDrop = (files) => {\r\n        //Set empty files names\r\n        let fileList = []\r\n        \r\n        \r\n        for (var i = 0; i < files.length; i++) \r\n        {\r\n            if (!files[i].name) return\r\n            //add new element and its names\r\n            fileList.push(files[i].name)\r\n            //this.setState({files: files[0].name})\r\n            \r\n        }\r\n        //List elemnts\r\n        this.setState({files: fileList})\r\n        //this.setState({files: files[0].name})\r\n        \r\n    }\r\n    //CARGAR EXCEL AL APLICATIVO\r\n    handleInputChange=(e)=>{   \r\n        //Cargar data de Excel al aplicativo emplea saveDataHandler()\r\n        var Banco2={\r\n            data:[],\r\n            /*data:[\r\n                {index:0,\r\n                fecha:\"\",\r\n                cargo:0,\r\n                abono:0,\r\n                descripcion:\"\",\r\n                usedFlag:0,\r\n                loadingbancodata:false,\r\n                selected:false\r\n            }\r\n            ],*/\r\n        }\r\n        var Caja2={\r\n            data:[],\r\n            /*data:[\r\n                {index:0,\r\n                fecha:\"\",\r\n                cargo:0,\r\n                abono:0,\r\n                descripcion:\"\",\r\n                usedFlag:0,\r\n                loadingcajadata:false,\r\n                selected:false\r\n    }\r\n            ],*/\r\n        }\r\n        e.preventDefault();\r\n        var files = e.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            //Caja\r\n            const wsname = readedData.SheetNames[0];\r\n            const ws = readedData.Sheets[wsname];\r\n    \r\n            /* Convert array to json*/\r\n            const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n\r\n            //Bancos\r\n            const wsname2 = readedData.SheetNames[1];\r\n            const ws2 = readedData.Sheets[wsname2];\r\n    \r\n            /* Convert array to json*/\r\n            const dataParse2 = XLSX.utils.sheet_to_json(ws2, {header:1});\r\n            \r\n            \r\n            var Caja={\r\n                fecha:[],\r\n                cargo:[],\r\n                abono:[],\r\n                descripcion:[]\r\n\r\n            }\r\n            var Banco={\r\n                fecha:[],\r\n                cargo:[],\r\n                abono:[],\r\n                descripcion:[]\r\n            }\r\n            \r\n            for(var i=2;i<dataParse.length;i++ ){\r\n                const temp={\r\n                    id:i-2,\r\n                    fecha:(dataParse[i][0]),\r\n                    cargo:(dataParse[i][1]),\r\n                    abono:(dataParse[i][2]),\r\n                    descripcion:(dataParse[i][3]),\r\n                    showOptions:false,\r\n                    loadingcajadata:false,\r\n                    selected:false,\r\n                    idmatch:-1,\r\n                    idmatchAbono:-1,\r\n                    idmatchCargo:-1,\r\n                    usedFlag:false,\r\n                    usedFlagCargo:false,\r\n                    usedFlagAbono:false,\r\n                    typeAbono:'none',\r\n                    typeCargo:'none'\r\n                }\r\n                Caja2.data.push(temp)\r\n                Caja.fecha.push(dataParse[i][0])\r\n                Caja.cargo.push(dataParse[i][1])\r\n                Caja.abono.push(dataParse[i][2])\r\n                Caja.descripcion.push(dataParse[i][3])\r\n            }\r\n\r\n            for(var j=2;j<dataParse2.length;j++ ){\r\n                const temp={\r\n                    id:j-2,\r\n                    fecha:(dataParse2[j][0]),\r\n                    cargo:(dataParse2[j][1]),\r\n                    abono:(dataParse2[j][2]),\r\n                    descripcion:(dataParse2[j][3]),\r\n                    loadingbancodata:false,\r\n                    showOptions:false,\r\n                    selected:false,\r\n                    idmatch:-1,\r\n                    idmatchAbono:-1,\r\n                    idmatchCargo:-1,\r\n                    usedFlag:false,\r\n                    usedFlagCargo:false,\r\n                    usedFlagAbono:false,\r\n                    typeAbono:'none',\r\n                    typeCargo:'none'\r\n                }\r\n                Banco2.data.push(temp)\r\n                Banco.fecha.push(dataParse2[j][0])\r\n                Banco.cargo.push(dataParse2[j][1])\r\n                Banco.abono.push(dataParse2[j][2])\r\n                Banco.descripcion.push(dataParse2[j][3])\r\n            }\r\n\r\n            //console.log('Caja',Caja)\r\n            \r\n\r\n            //console.log('Banco',Banco)\r\n            \r\n\r\n            //Secion similar al App.js\r\n            /*\r\n            const inputByUser=Caja.abono\r\n            var arrayFlag=[]\r\n            arrayFlag.length=inputByUser.length\r\n            console.log('arrayFlag',arrayFlag)\r\n            \r\n            const proposedSum=590\r\n            console.log('proposedSum',proposedSum)\r\n            const resultado= SubsetSum(inputByUser,arrayFlag,proposedSum)\r\n            console.log('resultadoexcel',resultado)\r\n            */\r\n\r\n           \r\n\r\n\r\n\r\n            \r\n            \r\n            //setFileUploaded(dataParse);\r\n        };\r\n        reader.readAsBinaryString(f)\r\n\r\n        reader.onloadend=()=>{\r\n            this.saveDataHandler(Caja2,Banco2)\r\n        }\r\n        \r\n\r\n            \r\n\r\n        \r\n        \r\n    }\r\n    render() {\r\n        /*\r\n        var nuevo_array = arr.map(function callback(currentValue, index, array) {\r\n            // Elemento devuelto de nuevo_array\r\n        }[, thisArg])\r\n        */\r\n        return (\r\n        <React.Fragment>\r\n        <DragAndDrop handleDrop={this.handleDrop}  >\r\n            <div style={{height: 20, width: 800}} onClick={()=>this.fileInput.click()}>\r\n                <input\r\n                    required\r\n                    type=\"file\"\r\n                    style={{display:'none', height: 70, width: 800}} \r\n                    name=\"file\"\r\n                    id=\"file\"\r\n                    key=\"file\"\r\n                    onChange={(event)=>this.handleInputChange(event)}\r\n                    ref={fileInput=>this.fileInput=fileInput}\r\n                    placeholder=\"Archivo Excel\"\r\n                />\r\n                {this.state.files.map((file,index) =>\r\n                    <div key={index} >{file}</div>\r\n                )}\r\n            </div>\r\n            \r\n        </DragAndDrop>\r\n        \r\n        \r\n        </React.Fragment>\r\n        )\r\n  }\r\n}\r\nexport default FileListMain","import React from 'react';  \r\nimport './Popup.css';  \r\n\r\nclass Popup extends React.Component {\r\n    state={\r\n        closePopUp:false\r\n\r\n    }\r\n         \r\n  render() {  \r\n    return (\r\n    \r\n    \r\n    <div className='popup'>  \r\n        <div className='popup_contenido'>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-pop-90\">\r\n                </div>\r\n                <div className=\"col-pop-10 alineacion-derecha\">                \r\n                    <button className=\"button-color\" onClick={this.props.closePopup}> Cerrar </button>\r\n                </div>   \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <h1 className=\"titulo-center\">{this.props.titulo}</h1>\r\n            </div>              \r\n            \r\n            <div className=\"row\">\r\n                {this.props.contenido} \r\n            </div>\r\n             \r\n        </div>  \r\n    </div>\r\n     \r\n);  \r\n}  \r\n}  \r\n\r\nexport default Popup;","import React from 'react';  \r\nimport './Popup_flotante.css';  \r\n\r\nclass Popup extends React.Component {\r\n    state={\r\n        closePopUp:false\r\n\r\n    }\r\n         \r\n  render() {  \r\n    return (    \r\n    <div className={this.props.position==='left'?'popup-flotante lado_izquierdo':'popup-flotante'}>  \r\n        <div className='popup_contenido'>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-pop-90\">\r\n                </div>\r\n                <div className=\"col-pop-10 alineacion-derecha\">                \r\n                    <button className=\"button-color\" onClick={this.props.closePopup}> Cerrar </button>\r\n                </div>   \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <h1 className=\"titulo-center\">{this.props.titulo}</h1>\r\n            </div>              \r\n            \r\n            <div className=\"row\">\r\n                {this.props.contenido} \r\n            </div>\r\n             \r\n        </div>  \r\n    </div>\r\n     \r\n);  \r\n}  \r\n}  \r\n\r\nexport default Popup;","    //W lista de valores que conforman un conjunto [array]\r\n    //X array de solucion donde (1) es valor considerado en el contunto y (0) es el valor no tomado en el conjunto\r\n    //m valor de la funcion objetivo a la que la suma de los valores seleccionedos(X) en el conjunto(W) es igual a 'm'\r\n\r\n    const  SubsetSum= async(InputByUser,ArrayFlag,ProposedSum)=>{\r\n        //const input = {...W}\r\n        //const arrayFlag = {...X}\r\n        //const proposedSum= M\r\n        //const inputByUser=[2,10,15,11,7,5,9,13,8,20]\r\n        const inputByUser=InputByUser\r\n        //const arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n        \r\n        var arrayFlag=[...ArrayFlag]\r\n        //const proposedSum=20\r\n        const proposedSum=ProposedSum\r\n\r\n        var ArrayResult=[]\r\n    \r\n        const isValidSubset=( index)=>{\r\n            //console.log(index*1)\r\n            let sum=0\r\n            let remainingWeigths=0\r\n            for(let i=0;i<=index;i++ ){\r\n                sum+=arrayFlag[i]*inputByUser[i]\r\n            }\r\n    \r\n            for(let j=index*1+1;j<=inputByUser.length;j++ ){\r\n                remainingWeigths+=inputByUser[j]\r\n            }\r\n    \r\n            if(sum*1===proposedSum*1){\r\n                //console.log(':D encontre una solución m')                \r\n                printSolution(arrayFlag)\r\n                return false\r\n            }\r\n            if(sum*1+remainingWeigths*1<proposedSum*1){\r\n                //console.log('no llego a la suma')\r\n                return false\r\n            }\r\n            if(sum*1>proposedSum*1){\r\n                //console.log('me pase de la suma')\r\n                return false\r\n            }\r\n            //go\r\n            //sigo adelante buscando\r\n            return true\r\n        }\r\n        const subSet=(index)=>{\r\n            //taking value in array for this index\r\n            if(index < inputByUser.length){\r\n                arrayFlag[index]=1\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n                arrayFlag[index]=0\r\n                //Cambiar de nodo de 1->0 (nodo anulado)\r\n                //not taking value for this index\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n            }\r\n        }\r\n        const printSolution=(arrayFlag)=>{\r\n            //Function for save wich index in array X are 1 (selected)\r\n            //console.log(arrayFlag)\r\n            const arraytemp=[...arrayFlag]//{...arrayFlag}\r\n                \r\n            ArrayResult.push(arraytemp)\r\n            //console.log(ArrayResult)\r\n            \r\n        }\r\n        const main=()=>{\r\n            //console.log('Data ingresada',InputByUser)\r\n            \r\n            subSet(0)\r\n            \r\n        \r\n        }\r\n        //Ejecucion de funcion\r\n        main()\r\n\r\n        //console.log('ArrayResult',ArrayResult)\r\n        return await ArrayResult\r\n\r\n        \r\n    \r\n        \r\n    \r\n    \r\n    }\r\n    \r\n    export default SubsetSum;\r\n    \r\n    //javascript\r\n    /*\r\n    \r\n    function  SubsetSum(){\r\n      \r\n        //const input = {...W}\r\n        //const arrayFlag = {...X}\r\n        //const proposedSum= M\r\n        const inputByUser=[2,10,15,11,7,5,9,13,8,20]\r\n        var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n        const proposedSum=20\r\n    \r\n        function isValidSubset( index){\r\n            //console.log(index*1)\r\n            var sum=0\r\n            var remainingWeigths=0\r\n            for(var i=0;i<=index;i++ ){\r\n                sum+=arrayFlag[i]*inputByUser[i]\r\n                \r\n            }\r\n    \r\n            for(var j=index+1;j<=inputByUser.length ;j++ ){\r\n                remainingWeigths+=inputByUser[j]\r\n            }\r\n            //console.log('suma',sum)\r\n            if(sum*1===proposedSum*1){\r\n                //console.log(':D encontre una solución m')\r\n                printSolution()\r\n                return false\r\n            }\r\n            if(sum*1+remainingWeigths*1<proposedSum*1){\r\n                //console.log('no llego a la suma')\r\n                return false\r\n            }\r\n            if(sum*1>proposedSum*1){\r\n                //console.log('me pase de la suma')\r\n                return false\r\n            }\r\n            //go\r\n            //sigo adelante buscando\r\n            return true\r\n        }\r\n        function subSet(index){\r\n          //console.log('index',index*1)\r\n          \r\n            //taking value in array for this index\r\n            if(index < inputByUser.length){\r\n              //console.log('oli')\r\n                arrayFlag[index]=1\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n                arrayFlag[index]=0\r\n                \r\n                //Cambiar de nodo de 1->0 (nodo anulado)\r\n                //not taking value for this index\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n            }\r\n        }\r\n        function printSolution(){\r\n            //Function for save wich index in array X are 1 (selected)\r\n            console.log(arrayFlag)\r\n        }\r\n        function main(){\r\n            //console.log('length',inputByUser.length)\r\n            subSet(0)\r\n            \r\n        \r\n        }\r\n        //Ejecucion de funcion\r\n        console.log(inputByUser)\r\n        main();\r\n        \r\n    \r\n    }\r\n    SubsetSum()\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    */","    //W lista de valores que conforman un conjunto [array]\r\n    //X array de solucion donde (1) es valor considerado en el contunto y (0) es el valor no tomado en el conjunto\r\n    //m valor de la funcion objetivo a la que la suma de los valores seleccionedos(X) en el conjunto(W) es igual a 'm'\r\n\r\n    const  SubSetSum2= async(InputByUser,ArrayFlag,ProposedSum)=>{\r\n        //const input = {...W}\r\n        //const arrayFlag = {...X}\r\n        //const proposedSum= M\r\n        //const inputByUser=[{id:2,valor:10},{id:15,valor:11},{id:7,valor:5},{id:9,valor:13},{id:8,valor:20}]\r\n        const inputByUser=InputByUser\r\n        //const arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n        \r\n        var arrayFlag=[...ArrayFlag]\r\n        //const proposedSum=20\r\n        const proposedSum=ProposedSum\r\n\r\n        var ArrayResult=[]\r\n    \r\n        const isValidSubset=( index)=>{\r\n            //console.log(index*1)\r\n            //console.log('inputByUser=>',inputByUser)\r\n            let sum=0\r\n            let remainingWeigths=0\r\n            for(let i=0;i<=index;i++ ){\r\n                sum+=arrayFlag[i]*inputByUser[i].valor\r\n            }\r\n            //console.log('inputByUser.length',inputByUser.length,'index',index,'inputByUser[0]',inputByUser[0].valor)   \r\n            for(let j=index*1+1;j<inputByUser.length;j++ ){\r\n                //console.log(j)\r\n                remainingWeigths+=inputByUser[j].valor\r\n            }\r\n    \r\n            if(sum*1===proposedSum*1){\r\n                //console.log(':D encontre una solución m')                \r\n                printSolution(arrayFlag)\r\n                return false\r\n            }\r\n            if(sum*1+remainingWeigths*1<proposedSum*1){\r\n                //console.log('no llego a la suma')\r\n                return false\r\n            }\r\n            if(sum*1>proposedSum*1){\r\n                //console.log('me pase de la suma')\r\n                return false\r\n            }\r\n            //go\r\n            //sigo adelante buscando\r\n            return true\r\n        }\r\n        const subSet=(index)=>{\r\n            //taking value in array for this index\r\n            if(index < inputByUser.length){\r\n                arrayFlag[index]=1\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n                arrayFlag[index]=0\r\n                //Cambiar de nodo de 1->0 (nodo anulado)\r\n                //not taking value for this index\r\n                if(isValidSubset(index)){\r\n                    subSet(index+1)\r\n                }\r\n            }\r\n        }\r\n        const printSolution=(arrayFlag)=>{\r\n            //Function for save wich index in array X are 1 (selected)\r\n            //console.log(arrayFlag)\r\n            const arraytemp=[...arrayFlag]//{...arrayFlag}\r\n                \r\n            ArrayResult.push(arraytemp)\r\n            //console.log(ArrayResult)\r\n            \r\n        }\r\n        const main=()=>{\r\n            //console.log('Data ingresada',InputByUser)\r\n            \r\n            subSet(0)\r\n            \r\n        \r\n        }\r\n        //Ejecucion de funcion\r\n        main()\r\n\r\n        //console.log('ArrayResult',ArrayResult)\r\n        return await ArrayResult\r\n\r\n        \r\n    \r\n        \r\n    \r\n    \r\n    }\r\n    \r\n    export default SubSetSum2;\r\n    ","import React, { Component } from 'react';\r\nimport './Checkbox.css';\r\n//https://stackoverflow.com/questions/29617200/how-to-make-checkboxes-rounded\r\nclass Checkbox extends Component{\r\n    state={\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <label class=\"container\">Cargar\r\n                    <input type=\"checkbox\" /*checked=\"checked\"*/ />\r\n                    <span class=\"checkmark\"></span>\r\n                </label>\r\n                <label class=\"container\">Descargar\r\n                    <input type=\"checkbox\" />\r\n                    <span class=\"checkmark\"></span>\r\n                </label>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport './Table.css';\r\nimport Popup from './Popup/Popup'\r\nimport Popupflotante from './Popup/Popup_flotante'\r\n\r\n\r\n//Para determinar que grupo de valores suman X\r\nimport SubsetSum from './SumSubset';\r\nimport SubSetSum2 from './SubSetSum/SubSetSum2';\r\n\r\nimport DragAndDrop from './DragAndDrop/DragAndDrop';\r\nimport Checkbox from './Checkbox/Checkbox';\r\n\r\nimport excelFile from '../files/BoucheoCajaBanco.xlsx';\r\n\r\nimport {FaFileExcel} from 'react-icons/fa'\r\n//Icons\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nclass XlsxUploaderV3 extends Component {\r\n    state={\r\n        opcion:0,\r\n        showPopup:false,\r\n        showPopupFloat:false,\r\n\r\n        showOptions:false,\r\n        showtable:false,\r\n        dataBanco:{\r\n            data:[{id:1,fecha:\"\",cargo:\"\",abono:\"\",descripcion:\"\",showOptions:false,loadingbancodata:false,selected:false,usedFlag:false,usedFlagAbono:false,usedFlagCargo:false,idmatch:0,idmatchAbono:0,idmatchCargo:0,typeAbono:'none',typeCargo:'none'}],\r\n        },\r\n        dataCaja:{\r\n            data:[{id:1,fecha:\"\",cargo:\"\",abono:\"\",descripcion:\"\",showOptions:false,loadingcajadata:false,selected:false,usedFlag:false,usedFlagAbono:false,usedFlagCargo:false,idmatch:0,idmatchAbono:0,idmatchCargo:0,typeAbono:'none',typeCargo:'none'}],\r\n        },\r\n\r\n        idCajaSelect:0,\r\n        idBancoSelect:0,\r\n        parametro:\"\",//abono , cargo\r\n        listOptions:{\r\n            flag:false,\r\n            optionSelected:1,//1:Caja 2:Banco\r\n            listdata:[{id:1,fecha:\"\",cargo:\"\",abono:\"\",descripcion:\"\",showOptions:false,loadingcajadata:false,selected:false,usedFlag:false,usedFlagAbono:false,usedFlagCargo:false,idmatch:0,idmatchAbono:0,idmatchCargo:0,typeAbono:'none',typeCargo:'none'}],\r\n        },\r\n        positionPopup:'right' //Popup show 'right': when caja is clicked ELSE 'left'\r\n        \r\n    }\r\n    //Funcion de apoyo \r\n    yyyymmdd=(dateIn)=> {\r\n        var yyyy = dateIn.getFullYear();\r\n        var mm = dateIn.getMonth()+1; // getMonth() is zero-based\r\n        var dd  = dateIn.getDate();\r\n        return String(yyyy +\"/\"+ mm +\"/\" + dd); // Leading zeros for mm and dd\r\n     }\r\n    //CARGAR EXCEL AL APLICATIVO\r\n    handleInputChange=(e)=>{   \r\n        //Cargar data de Excel al aplicativo emplea saveDataHandler()\r\n        var Banco2={\r\n            data:[],\r\n            /*data:[\r\n                {index:0,\r\n                fecha:\"\",\r\n                cargo:0,\r\n                abono:0,\r\n                descripcion:\"\",\r\n                usedFlag:0,\r\n                loadingbancodata:false,\r\n                selected:false\r\n            }\r\n            ],*/\r\n        }\r\n        var Caja2={\r\n            data:[],\r\n            /*data:[\r\n                {index:0,\r\n                fecha:\"\",\r\n                cargo:0,\r\n                abono:0,\r\n                descripcion:\"\",\r\n                usedFlag:0,\r\n                loadingcajadata:false,\r\n                selected:false\r\n    }\r\n            ],*/\r\n        }\r\n        e.preventDefault();\r\n        var files = e.target.files, f = files[0];\r\n        //console.log(f)\r\n        if(f.type===\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"){\r\n\r\n        \r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            //Caja\r\n            const wsname = readedData.SheetNames[0];\r\n            const ws = readedData.Sheets[wsname];\r\n    \r\n            /* Convert array to json*/\r\n            const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n\r\n            //Bancos\r\n            const wsname2 = readedData.SheetNames[1];\r\n            const ws2 = readedData.Sheets[wsname2];\r\n    \r\n            /* Convert array to json*/\r\n            const dataParse2 = XLSX.utils.sheet_to_json(ws2, {header:1});\r\n            \r\n            \r\n            var Caja={\r\n                fecha:[],\r\n                cargo:[],\r\n                abono:[],\r\n                descripcion:[]\r\n\r\n            }\r\n            var Banco={\r\n                fecha:[],\r\n                cargo:[],\r\n                abono:[],\r\n                descripcion:[]\r\n            }\r\n            \r\n            for(var i=2;i<dataParse.length;i++ ){\r\n                //console.log(dataParse[i][0])\r\n                let myDate = new Date(( (dataParse[i][0]) - (25567 + 1))*86400*1000)\r\n                const temp={\r\n                    id:i-2,\r\n                    fecha:myDate.toLocaleDateString(),\r\n                    //fecha:this.yyyymmdd(myDate),\r\n                    // fecha:(dataParse[i][0]),\r\n                    cargo:(dataParse[i][1]===undefined?0:dataParse[i][1]),\r\n                    abono:(dataParse[i][2]===undefined?0:dataParse[i][2]),\r\n                    descripcion:(dataParse[i][3]),\r\n                    showOptions:false,\r\n                    loadingcajadata:false,\r\n                    selected:false,\r\n                    idmatch:-1,\r\n                    idmatchAbono:-1,\r\n                    idmatchCargo:-1,\r\n                    usedFlag:false,\r\n                    usedFlagCargo:false,\r\n                    usedFlagAbono:false,\r\n                    typeAbono:'none',\r\n                    typeCargo:'none'\r\n                }\r\n                Caja2.data.push(temp)\r\n                Caja.fecha.push(dataParse[i][0])\r\n                Caja.cargo.push(dataParse[i][1])\r\n                Caja.abono.push(dataParse[i][2])\r\n                Caja.descripcion.push(dataParse[i][3])\r\n            }\r\n\r\n            for(var j=2;j<dataParse2.length;j++ ){\r\n                // 1. Subtract number of days between Jan 1, 1900 and Jan 1, 1970, plus 1 (Google \"excel leap year bug\")             \r\n                // 2. Convert to milliseconds.\r\n                //Excel to date javascript\r\n                //Ref:https://gist.github.com/christopherscott/2782634\r\n                let myDate = new Date(( (dataParse2[j][0]) - (25567 + 1))*86400*1000)\r\n                const temp={\r\n                    id:j-2,\r\n                    fecha:myDate.toLocaleDateString(),\r\n                    //fecha:(dataParse2[j][0]),\r\n                    cargo:(dataParse2[j][1]===undefined?0:dataParse2[j][1]),\r\n                    abono:(dataParse2[j][2]===undefined?0:dataParse2[j][2]),\r\n                    descripcion:(dataParse2[j][3]),\r\n                    loadingbancodata:false,\r\n                    showOptions:false,\r\n                    selected:false,\r\n                    idmatch:-1,\r\n                    idmatchAbono:-1,\r\n                    idmatchCargo:-1,\r\n                    usedFlag:false,\r\n                    usedFlagCargo:false,\r\n                    usedFlagAbono:false,\r\n                    typeAbono:'none',\r\n                    typeCargo:'none'\r\n                }\r\n                Banco2.data.push(temp)\r\n                Banco.fecha.push(dataParse2[j][0])\r\n                Banco.cargo.push(dataParse2[j][1])\r\n                Banco.abono.push(dataParse2[j][2])\r\n                Banco.descripcion.push(dataParse2[j][3])\r\n            }\r\n\r\n            //console.log('Caja',Caja)\r\n            \r\n\r\n            //console.log('Banco',Banco)\r\n            \r\n\r\n            //Secion similar al App.js\r\n            /*\r\n            const inputByUser=Caja.abono\r\n            var arrayFlag=[]\r\n            arrayFlag.length=inputByUser.length\r\n            console.log('arrayFlag',arrayFlag)\r\n            \r\n            const proposedSum=590\r\n            console.log('proposedSum',proposedSum)\r\n            const resultado= SubsetSum(inputByUser,arrayFlag,proposedSum)\r\n            console.log('resultadoexcel',resultado)\r\n            */\r\n\r\n           \r\n\r\n\r\n\r\n            \r\n            \r\n            //setFileUploaded(dataParse);\r\n        };\r\n        reader.readAsBinaryString(f)\r\n\r\n        reader.onloadend=()=>{\r\n            this.saveDataHandler(Caja2,Banco2)\r\n        }\r\n        }else{\r\n            alert('Seleccione un archivo Excel')\r\n        }\r\n        \r\n    }\r\n\r\n    //Grabar los datos en las variables para las tablas Caja y Banco\r\n    saveDataHandler=(Caja2,Banco2)=>{\r\n        //console.log('Caja2',Caja2)\r\n        //console.log('Banco2',Banco2)\r\n        /*\r\n        const dataCaja = {...this.state.dataCaja}\r\n        dataCaja.data=Caja2.data\r\n        const dataBanco = {...this.state.dataBanco}\r\n        dataBanco.data=Banco2.data\r\n        \r\n        this.setState({dataCaja:dataCaja})\r\n        this.setState({dataBanco:dataBanco})\r\n        */\r\n        this.setState({dataCaja:Caja2})\r\n        this.setState({dataBanco:Banco2})\r\n        this.setState({showtable:true})\r\n\r\n    }\r\n    \r\n    // When the user clicks on the button, scroll to the top of the document\r\n    topFunction() {\r\n    document.body.scrollTop = 0; // For Safari\r\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n    }\r\n    togglePopup() {  \r\n        //Cerrar PopUp\r\n        this.setState({  \r\n             showPopup: !this.state.showPopup  \r\n        });  \r\n    }\r\n    dibujartabla(){\r\n        //opcion=1 Caja , opcion=2 Banco\r\n        \r\n        return(\r\n        <React.Fragment>\r\n            {\r\n                this.state.index*1===1?\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <button onClick={(e)=>{this.procesarData(e,this.state.dataCaja)}}>Procesar Cargo</button>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\">\r\n                        <button onClick={(e)=>{this.procesarData(e,this.state.dataCaja)}}>Procesar Abono</button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <button onClick={(e)=>{this.procesarData(e,this.state.dataBanco)}}>Procesar Cargo</button>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\">\r\n                        <button onClick={(e)=>{this.procesarData(e,this.state.dataBanco)}}>Procesar Abono</button>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            }\r\n            <div className=\"row\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n        \r\n        )\r\n    } \r\n       \r\n    loadingdata(opcion,data){\r\n        //Mostra mensaje en la fila selecciona mientras se busca la suma solucion\r\n        if(opcion===1){\r\n            //Caja\r\n            const inputsUpdated = {...this.state.dataCaja}\r\n            //console.log(inputsUpdated.data[data.id*1].loadingcajadata)\r\n            inputsUpdated.data[data.id*1].loadingcajadata=inputsUpdated.data[data.id*1].loadingcajadata===false?true:false//!(childData.showData);\r\n            this.setState({dataCaja:inputsUpdated})\r\n        }else{\r\n            //Banco\r\n            const inputsUpdated = {...this.state.dataBanco}\r\n            //console.log(inputsUpdated.data[data.id*1].loadingbancodata)\r\n            inputsUpdated.data[data.id*1].loadingbancodata=inputsUpdated.data[data.id*1].loadingbancodata===false?true:false//!(childData.showData);\r\n            this.setState({dataBanco:inputsUpdated})\r\n        }\r\n    }\r\n\r\n    //CERAR POPUP\r\n    togglePopupFlotante() {  \r\n        //Cerrar PopUp\r\n        this.setState({  \r\n             showPopupFloat: !this.state.showPopupFloat  \r\n        });  \r\n    }\r\n    //BUSCAR OPCION DE POPUP\r\n    handleObjectChange(e,data,opcion ){\r\n        //opcion=1 Caja , opcion=2 Banco\r\n\r\n        this.setState({opcion:opcion})\r\n        //console.log('data selecionada en fila',data)\r\n\r\n        //Top scroll\r\n        //this.topFunction()\r\n        //muestra popup\r\n        //this.togglePopup()\r\n\r\n        //show options below raw Caja/Banco Selected en tabla\r\n        const j=data.id*1\r\n\r\n        //Edge no reconoce {...this.state}\r\n        //https://stackoverflow.com/questions/53631949/why-ie-11-display-blank-page-rendering-react-app\r\n\r\n        //{...this.state}(asigno una copia) vs this.state(objeto real, estoy ediatndo sobre el state verdadero de la aplicacion)\r\n        //https://stackoverflow.com/questions/58572536/difference-between-this-state-and-this-state\r\n        \r\n        //https://stackoverflow.com/questions/43756211/best-way-to-polyfill-es6-features-in-react-app-that-uses-create-react-app\r\n        if(opcion*1===1){\r\n            this.setState({idCajaSelect:data.id})\r\n\r\n            const inputsUpdated = {...this.state}\r\n            const input=inputsUpdated['dataCaja']\r\n            //console.log(input.data[j].showOptions)\r\n            input.data[j].showOptions=input.data[j].showOptions===false?true:false//!(childData.showData);\r\n            this.setState({dataCaja:input})\r\n        }else{\r\n            this.setState({idBancoSelect:data.id})\r\n\r\n            const inputsUpdated = {...this.state.dataBanco}\r\n            //console.log(inputsUpdated.data[j].showOptions)\r\n            inputsUpdated.data[j].showOptions=inputsUpdated.data[j].showOptions===false?true:false//!(childData.showData);\r\n            this.setState({dataBanco:inputsUpdated})\r\n\r\n        }\r\n        \r\n    }    \r\n    async procesarData(e,data,opcion,tipo){\r\n\r\n        \r\n        e.preventDefault()\r\n        \r\n        \r\n        //opcion=1 Caja , opcion=2 Banco\r\n        //tipo=\"cargo\" tipo=\"abono\" \r\n        //Mientas se procesa mostrar mensaje de espera\r\n        this.loadingdata(opcion,data)\r\n        \r\n        //var inputByUser=[]\r\n        var arrayFlag=[]\r\n\r\n        var inputByUser2=[]\r\n        //CAJA\r\n        if(opcion*1===1){            \r\n            if(tipo==='cargo'){\r\n                \r\n                for(var i=0;i<this.state.dataBanco.data.length;i++ ){\r\n                    if(this.state.dataBanco.data[i].usedFlagAbono===false){\r\n                        //Evitar considerar montos iguales a cero\r\n                        \r\n                        if(this.state.dataBanco.data[i].abono*1!==0){\r\n                            let objeto={id:this.state.dataBanco.data[i].id,valor:this.state.dataBanco.data[i].abono}\r\n                            //inputByUser.push(this.state.dataBanco.data[i].abono)\r\n                            inputByUser2.push(objeto)\r\n                        }else{\r\n                            //inputByUser.push(0.0001)\r\n                        }\r\n                        \r\n                        //inputByUser.push(this.state.dataBanco.data[i].abono)\r\n                        \r\n                    }\r\n                    \r\n                }                \r\n                //var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n                //Define un array de valores de tamaño igual a inputByUser\r\n                \r\n                //arrayFlag.length=inputByUser.length\r\n                //inicializamos 'arrayFlag' con 0: no se considera y 1 se considera\r\n                //arrayFlag.fill(0)                              \r\n                const proposedSum=data.cargo   \r\n                //console.log('inputByUser',inputByUser.length)             \r\n                //const resultado= await SubsetSum(inputByUser,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                //console.log('resultado',resultado)\r\n                console.log('inputByUser2',inputByUser2)\r\n                arrayFlag.length=inputByUser2.length\r\n                arrayFlag.fill(0) \r\n                const resultado2=await SubSetSum2(inputByUser2,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                console.log('resultado',resultado2)\r\n\r\n                this.returnListSolutions(inputByUser2,resultado2,1,'abono')\r\n                \r\n\r\n            }else{\r\n                //this.setState({loadingcajadata:true})\r\n                for(var j=0;j<this.state.dataBanco.data.length;j++ ){\r\n                    if(this.state.dataBanco.data[j].usedFlagCargo===false){\r\n                        //Evitar considerar montos iguales a cero\r\n                        \r\n                        if(this.state.dataBanco.data[j].cargo*1!==0){\r\n                            let objeto={id:this.state.dataBanco.data[j].id,valor:this.state.dataBanco.data[j].cargo}\r\n                            //inputByUser.push(this.state.dataBanco.data[j].cargo)\r\n                            inputByUser2.push(objeto)\r\n                        }else{\r\n                            //inputByUser.push(0.0001)\r\n                        }\r\n                        \r\n                        //inputByUser.push(this.state.dataBanco.data[j].cargo)\r\n                        \r\n                    }\r\n                    \r\n                }                \r\n                //var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n                //Define un array de valores de tamaño igual a inputByUser\r\n                \r\n                //arrayFlag.length=inputByUser.length\r\n                //inicializamos 'arrayFlag' con 0: no se considera y 1 se considera\r\n                //arrayFlag.fill(0) \r\n                //console.log('inputByUser',inputByUser.length)                             \r\n                const proposedSum=data.abono\r\n                //const resultado= await SubsetSum(inputByUser,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                //console.log('resultado',resultado)\r\n                console.log('inputByUser2',inputByUser2)\r\n                arrayFlag.length=inputByUser2.length\r\n                arrayFlag.fill(0) \r\n                const resultado2=await SubSetSum2(inputByUser2,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                console.log('resultado',resultado2)\r\n\r\n                this.returnListSolutions(inputByUser2,resultado2,1,'cargo')\r\n\r\n            }\r\n\r\n            \r\n        }else{\r\n            //BANCO\r\n            \r\n            if(tipo==='cargo'){\r\n                for(var m=0;m<this.state.dataCaja.data.length;m++ ){\r\n                    if(this.state.dataCaja.data[m].usedFlagAbono===false){\r\n                        //Evitar considerar montos iguales a cero\r\n                        \r\n                        if(this.state.dataCaja.data[m].abono*1!==0){\r\n                            let objeto={id:this.state.dataCaja.data[m].id,valor:this.state.dataCaja.data[m].abono}\r\n                            //inputByUser.push(this.state.dataCaja.data[m].abono)\r\n                            inputByUser2.push(objeto)\r\n                        }else{\r\n                            //inputByUser.push(0.0001)\r\n                        }\r\n                        \r\n                        //inputByUser.push(this.state.dataCaja.data[m].abono)\r\n                        \r\n                    }\r\n                    \r\n                }                \r\n                //var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n                //Define un array de valores de tamaño igual a inputByUser\r\n                //Arrayflag=new Array(inputByUser.length)\r\n                //arrayFlag.length=inputByUser.length\r\n                //inicializamos 'arrayFlag' con 0: no se considera y 1 se considera\r\n                //arrayFlag.fill(0)      \r\n                //console.log('inputByUser',inputByUser.length)          \r\n                const proposedSum=data.cargo                \r\n                //const resultado= await SubsetSum(inputByUser,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                //console.log('resultado',resultado)\r\n                arrayFlag.length=inputByUser2.length\r\n                arrayFlag.fill(0)\r\n                const resultado2= await SubsetSum(inputByUser2,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                console.log('resultado',resultado2)\r\n                \r\n                this.returnListSolutions(inputByUser2,resultado2,2,'abono')\r\n\r\n            }else{\r\n                //this.setState({loadingbancodata:true})\r\n\r\n                for(var n=0;n<this.state.dataCaja.data.length;n++ ){\r\n                    if(this.state.dataCaja.data[n].usedFlagCargo===false){\r\n                        //Evitar considerar montos iguales a cero\r\n                        \r\n                        if(this.state.dataCaja.data[n].cargo*1!==0){\r\n                            let objeto={id:this.state.dataCaja.data[n].id,valor:this.state.dataCaja.data[n].cargo}\r\n                            //inputByUser.push(this.state.dataCaja.data[n].cargo)\r\n                            inputByUser2.push(objeto)\r\n                        }else{\r\n                            //inputByUser.push(0.0001)\r\n                        }\r\n                        \r\n                        //inputByUser.push(this.state.dataCaja.data[n].cargo)\r\n                        \r\n                    }\r\n                    \r\n                }                \r\n                //var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\r\n                //Define un array de valores de tamaño igual a inputByUser\r\n                \r\n                //arrayFlag.length=inputByUser.length\r\n                //inicializamos 'arrayFlag' con 0: no se considera y 1 se considera\r\n                //arrayFlag.fill(0)      \r\n                //console.log('inputByUser',inputByUser.length)      \r\n                const proposedSum=data.abono\r\n                //console.log('inputByUser',inputByUser)\r\n                \r\n                //const resultado= await SubsetSum(inputByUser,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                //console.log('resultado',resultado)\r\n                arrayFlag.length=inputByUser2.length\r\n                arrayFlag.fill(0)\r\n                const resultado2= await SubsetSum(inputByUser2,arrayFlag,proposedSum).then(this.loadingdata(opcion,data))\r\n                console.log('resultado',resultado2)\r\n                \r\n                this.returnListSolutions(inputByUser2,resultado2,2,'cargo')\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        //this.setState({showPopupFloat:false})\r\n\r\n    }\r\n    returnListSolutions(inputByUser,resultado,opcion,parametro){\r\n        \r\n        //opcion=1 Caja , opcion=2 Banco\r\n        //parametro='abono' , parametro='cargo' \r\n        const p=parametro\r\n        this.setState({parametro:p})\r\n        //console.log('parametro',parametro)\r\n        //console.log('opcion,opcion)\r\n\r\n        //alert(opcion===1?\"Buscar en Banco \":\"Buscar en Caja \",this.state.parametro)\r\n        //resultado=[{0,0,0,1},{0,1,1,0},{1,1,0,0}] Todas las formas en la que los valores suman\r\n        //inputByUser=[{id:1,valor:},{id:2,valor:},{id:3,valor:},{id:4,valor:}]\r\n        if(opcion===1){\r\n            if(resultado.length>0){\r\n                //Hay Resultados\r\n                //iterar entre la lista de opciones\r\n                //const dataBancotemp={...this.state.dataBanco}\r\n                var dataBancotempOptions=[]\r\n                const dataBancotempData= {...this.state.dataBanco.data.filter(a=>parametro==='abono'?a.usedFlagAbono===false:a.usedFlagCargo===false)}\r\n                //console.log('dataBancotempData',dataBancotempData)\r\n                for(var opt=0;opt<resultado.length;opt++){\r\n                    //Iterar entre la posiciones de la opcion\r\n                    //console.log(resultado[opt])\r\n                    var result=[]\r\n                    for( var pos=0;pos<resultado[opt].length;pos++){\r\n                        //console.log(opt)\r\n                        if(resultado[opt][pos]===1){\r\n                            //dataBancotempData[pos].selected=true\r\n                            dataBancotempData[inputByUser[pos].id].selected=true                            \r\n                            //console.log(dataBancotempData[pos])\r\n                            //result.push(dataBancotempData[pos])\r\n                            result.push(dataBancotempData[inputByUser[pos].id])\r\n                        }\r\n                    }\r\n                    //Result. index devuleve la posicion de la lista de opciones\r\n                    result.index=opt\r\n                    //Show listoption by index\r\n                    result.flag=false\r\n                    dataBancotempOptions.push(result)\r\n                }\r\n                //console.log(dataBancotempOptions)\r\n\r\n                const listOptions={...this.state.listOptions}\r\n                listOptions.flag=true\r\n                listOptions.listdata=dataBancotempOptions\r\n                listOptions.optionSelected=opcion\r\n                this.setState({listOptions:listOptions})\r\n                this.setState({showPopupFloat:true})\r\n                this.setState({positionPopup:'left'})\r\n\r\n                //console.log('listOptions',listOptions)\r\n                \r\n            }else{\r\n                //No hay resultados\r\n                //console.log('No hay resultados')\r\n\r\n                alert('No hay resultados que mostrar')\r\n            }\r\n\r\n        }\r\n        else{\r\n            if(resultado.length>0){\r\n                //Hay Resultados\r\n                //iterar entre la lista de opciones\r\n                //const dataBancotemp={...this.state.dataBanco}\r\n                var dataCajatempOptions=[]\r\n                const dataCajatempData= {...this.state.dataCaja.data.filter(a=>parametro==='abono'?a.usedFlagAbono===false:a.usedFlagCargo===false)}\r\n                //console.log('dataCajatempData',dataCajatempData)\r\n                for(var opts=0;opts<resultado.length;opts++){\r\n                    //Iterar entre la posiciones de la opcion\r\n                    //console.log(resultado[opt])\r\n                    var results=[]\r\n                    for( var poss=0;poss<resultado[opts].length;poss++){\r\n                        //console.log(opt)\r\n                        if(resultado[opts][poss]===1){\r\n                            //dataCajatempData[poss].selected=true\r\n                            dataCajatempData[inputByUser[pos].id].selected=true  \r\n                            //console.log(dataBancotempData[pos])\r\n                            //results.push(dataCajatempData[poss])\r\n                            results.push(dataCajatempData[inputByUser[pos].id])\r\n                        }\r\n                    }\r\n                    //Result. index devuleve la posicion de la lista de opciones\r\n                    results.index=opts\r\n                    //Show listoption by index\r\n                    results.flag=false\r\n                    dataCajatempOptions.push(results)\r\n                }\r\n                //console.log(dataCajatempOptions)\r\n                const listOptions={...this.state.listOptions}\r\n                listOptions.flag=true\r\n                listOptions.listdata=dataCajatempOptions\r\n                listOptions.optionSelected=opcion\r\n                this.setState({listOptions:listOptions})\r\n                this.setState({showPopupFloat:true})\r\n                this.setState({positionPopup:'right'})           \r\n            }else{\r\n                //No hay resultados\r\n                alert('No hay resultados que mostrar')\r\n            }\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    //DIBUJAR LISTA DE OPCIONES EN POPUP\r\n    dibujarListaOpciones(){\r\n        const optionSelected={...this.state.listOptions.optionSelected}\r\n        //console.log('listOptions=>',this.state.listOptions)\r\n        console.log('parametro=>',this.state.parametro)\r\n        //Parametro\r\n        //const parametro={...this.state.parametro}\r\n        return(\r\n        <React.Fragment>\r\n            <p>{'Se encontraron ' +this.state.listOptions.listdata.length +' grupos de opciones'}</p>\r\n            <table index=\"Caja_\" key='Caja' className=\"table table-center\">\r\n                    <thead>\r\n                        <tr index={'Caja1_'} key={'Caja1'}>\r\n                            <th colSpan=\"4\">{this.state.listOptions.optionSelected===1? 'Estado de Cuenta - Extracto Bancario': 'Libro Contable Empresa'}</th>\r\n                        </tr>\r\n                        \r\n                        <tr index={'Caja2_'} key={'Caja2'}>\r\n                            <th colSpan=\"1\">Fecha</th>\r\n                            <th colSpan=\"1\">Cargo</th>\r\n                            <th colSpan=\"1\">Abono</th>\r\n                            <th colSpan=\"1\">Descripción</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    {\r\n                        <tbody>\r\n                        {\r\n                        this.state.listOptions.listdata.map(con=>{\r\n                            return(<React.Fragment>\r\n                            <tr id={'opcion'+con.index} key={'opcion'+con.index} onClick={(e)=>{this.showListOptions(e,con,optionSelected)}} >\r\n                                <td colSpan={4}>{'Se tiene un grupo con '+con.length + ' items'}</td>\r\n                            </tr>\r\n                            {   con.flag?\r\n                                con.map(c=>{\r\n                                    return(\r\n                                    <tr id={'opcion'+con.index+'-'+c.id} key={'opcion'+con.index+'-'+c.id}  className=\"ct_nivel2\" onClick={(e)=>this.handleObjectListChange(e,con,optionSelected)}>\r\n                                        <td className=\"text-izquierda\">{c.fecha}</td>\r\n                                        <td className={this.state.parametro===\"cargo\"?\"text-resaltar\":\"\"}>{c.cargo}</td>\r\n                                        <td className={this.state.parametro===\"abono\"?\"text-resaltar\":\"\"}>{c.abono}</td>\r\n                                        <td className=\"text-izquierda\">{c.descripcion}</td>\r\n                                    </tr>\r\n                                    )\r\n                                }):null\r\n                            }\r\n                            </React.Fragment>\r\n                            )\r\n                        })\r\n                        }\r\n                    </tbody>\r\n                    }\r\n            </table>\r\n        </React.Fragment>\r\n        )\r\n\r\n    }\r\n    //Show-Hide list options\r\n    showListOptions(e,data,opcion){\r\n        console.log('data',data,'opcion',opcion)\r\n        data.flag=!data.flag\r\n        const listOptions={...this.state.listOptions}\r\n        listOptions.listdata[data.index]=data\r\n        this.setState({listOptions:listOptions})\r\n    }\r\n\r\n    //ACTUALIZAR OPCION EN LA TABLA\r\n    handleObjectListChange(e,data,opcion){\r\n        this.setState({showPopupFloat:false})\r\n        //opcion:1 Caja  opcion:2 Banco\r\n        //parametro='abono' parametro='cargo'\r\n        \r\n        if(this.state.listOptions.optionSelected===1){\r\n            //console.log('idCajaSelect',this.state.idCajaSelect)\r\n            //EN bucle cambiar usedFlag=1 de la lista Banco\r\n            const dataBanco={...this.state.dataBanco}\r\n            for(const dat of data){\r\n                //console.log(dat)\r\n                //console.log(dat.id)\r\n                for(var j=0; j<dataBanco.data.length;j++){\r\n                    if(dataBanco.data[j].id*1===dat.id*1){\r\n                        this.state.parametro===\"abono\"?dataBanco.data[j].usedFlagAbono=true:dataBanco.data[j].usedFlagCargo=true;                        \r\n                        this.state.parametro===\"abono\"?dataBanco.data[j].idmatchAbono=this.state.idCajaSelect*1:dataBanco.data[j].idmatchCargo=this.state.idCajaSelect*1;\r\n                        \r\n                        this.state.parametro===\"abono\"?dataBanco.data[j].typeAbono='child':dataBanco.data[j].typeCargo='child';\r\n                        \r\n                    }\r\n                    \r\n\r\n                }\r\n            }\r\n            this.setState({dataBanco:dataBanco})\r\n            //Cambiar usedFlag=1 de la lista Caja segun id===idCajaSelect\r\n            const dataCaja={...this.state.dataCaja}\r\n            for(var m=0;m<dataCaja.data.length;m++){\r\n                if(dataCaja.data[m].id===this.state.idCajaSelect){\r\n                    this.state.parametro===\"abono\"?dataCaja.data[m].usedFlagCargo=true:dataCaja.data[m].usedFlagAbono=true\r\n                    //dataCaja.data[m].usedFlag=true\r\n\r\n                    this.state.parametro===\"abono\"?dataCaja.data[m].typeCargo='master':dataCaja.data[m].typeAbono='master'\r\n                }\r\n            }\r\n            this.setState({dataCaja:dataCaja})\r\n\r\n        }else{\r\n            //console.log('idBancoSelect',this.state.idBancoSelect)\r\n            //EN bucle cambiar usedFlag=1 de la lista Caja\r\n            const dataCajas={...this.state.dataCaja}\r\n            for(const dat of data){\r\n                //console.log(dat)\r\n                //console.log(dat.id)\r\n                for(var i=0; i<dataCajas.data.length;i++){\r\n                    if(dataCajas.data[i].id===dat.id){\r\n                        this.state.parametro==='abono'?dataCajas.data[i].usedFlagAbono=true:dataCajas.data[i].usedFlagCargo=true ;                       \r\n                        this.state.parametro==='abono'?dataCajas.data[i].idmatchAbono=this.state.idBancoSelect*1:dataCajas.data[i].idmatchCargo=this.state.idBancoSelect*1;\r\n\r\n                        this.state.parametro===\"abono\"?dataCajas.data[i].typeAbono='child':dataCajas.data[i].typeCargo='child';\r\n                    }\r\n                    \r\n\r\n                }\r\n            }\r\n            this.setState({dataCaja:dataCajas})\r\n\r\n            //Cambiar usedFlag=1 de la lista Caja segun id===idBancoSelect\r\n            const dataBancos={...this.state.dataBanco}\r\n            for(var n=0;n<dataBancos.data.length;n++){\r\n                if(dataBancos.data[n].id===this.state.idBancoSelect){\r\n                    this.state.parametro==='abono'?dataBancos.data[n].usedFlagCargo=true:dataBancos.data[n].usedFlagAbono=true;\r\n\r\n                    this.state.parametro==='abono'?dataBancos.data[n].typeCargo='master':dataBancos.data[n].typeAbono='master';\r\n                    \r\n                }\r\n            }\r\n            this.setState({dataBanco:dataBancos})\r\n        }\r\n        \r\n        //alert()\r\n\r\n    }\r\n    //DEVOLVER LOS OPCIONES SELECCIONADAS A VALORES POR DEFECTO\r\n    restoreMatching(event,data,opcion,parametro){\r\n        event.preventDefault()\r\n        //Buscar en opcion:1 Caja  opcion:2 Banco\r\n        //Buscar en parametro='abono' parametro='cargo'\r\n        //console.log('fila seleccionada=>',data,'parametro=>',parametro,'opcion=>',opcion)\r\n\r\n        //Definir si la data de entrada es el master[padre] (data.idmatch:-1)\r\n        // o son la lista de opciones asociadas al master[hijos] (idmatch===data.idmatch)\r\n        var master=false;\r\n        if(parametro===\"cargo\" && data.typeAbono==='master'){//console.log('Seleccione un Abono',1);\r\n        master=true}\r\n        if(parametro===\"cargo\" && data.typeAbono==='child'){//console.log(2)\r\n        }\r\n\r\n        if(parametro===\"abono\" && data.typeCargo==='master'){//console.log('Seleccione un Cargo',3);\r\n        master=true}\r\n        if(parametro===\"abono\" && data.typeCargo==='child'){//console.log(4)\r\n        }\r\n\r\n        if(master===true){\r\n            //Seleccione el data master y debo limpiar los idmatch de la lista de opciones asociadas\r\n            if(opcion===1){\r\n                const dataCaja={...this.state.dataCaja}\r\n                for(var i=0;i<dataCaja.data.length;i++){\r\n                    if(parametro==='abono'){\r\n                        if(dataCaja.data[i].idmatchAbono===data.id){\r\n                            dataCaja.data[i].usedFlagAbono=false\r\n                            dataCaja.data[i].idmatchAbono=-1\r\n\r\n                            dataCaja.data[i].typeAbono='none'    \r\n                        }\r\n    \r\n                    }else{\r\n                        if(dataCaja.data[i].idmatchCargo===data.id){\r\n                            dataCaja.data[i].usedFlagCargo=false\r\n                            dataCaja.data[i].idmatchCargo=-1\r\n\r\n                            dataCaja.data[i].typeCargo='none'    \r\n                        }\r\n                    }\r\n                    \r\n    \r\n                }\r\n                const dataBanco={...this.state.dataBanco}\r\n                for(var j=0;j<dataBanco.data.length;j++){\r\n                    \r\n                    if(dataBanco.data[j].id===data.id){\r\n                        if(parametro==='abono'){\r\n                            dataBanco.data[j].usedFlagCargo=false\r\n\r\n                            dataBanco.data[j].typeCargo='none'\r\n    \r\n                        }else{\r\n                            dataBanco.data[j].usedFlagAbono=false\r\n\r\n                            dataBanco.data[j].typeAbono='none'\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n                this.setState({dataBanco:dataBanco})\r\n                this.setState({dataCaja:dataCaja})\r\n    \r\n    \r\n            }else{\r\n                const dataBanco={...this.state.dataBanco}\r\n                for(var m=0;m<dataBanco.data.length;m++){\r\n                    if(parametro==='abono'){\r\n                        if(dataBanco.data[m].idmatchAbono===data.id){\r\n                            dataBanco.data[m].usedFlagAbono=false\r\n                            dataBanco.data[m].idmatchAbono=-1\r\n\r\n                            dataBanco.data[m].typeAbono='none'    \r\n                        }\r\n    \r\n                    }else{\r\n                        if(dataBanco.data[m].idmatchCargo===data.id){\r\n                            dataBanco.data[m].usedFlagCargo=false\r\n                            dataBanco.data[m].idmatchCargo=-1\r\n\r\n                            dataBanco.data[m].typeCargo='none'     \r\n                        }\r\n                    }\r\n    \r\n                }\r\n                const dataCaja={...this.state.dataCaja}\r\n                for(var n=0;n<dataCaja.data.length;n++){\r\n                    \r\n                    if(dataCaja.data[n].id===data.id){\r\n                        if(parametro==='abono'){\r\n                            dataCaja.data[n].usedFlagCargo=false\r\n\r\n                            dataCaja.data[n].typeCargo='none'    \r\n                        }else{\r\n                            dataCaja.data[n].usedFlagAbono=false\r\n\r\n                            dataCaja.data[n].typeAbono='none' \r\n                        }\r\n                        \r\n                    }\r\n                }\r\n    \r\n                this.setState({dataBanco:dataBanco})\r\n                this.setState({dataCaja:dataCaja})\r\n    \r\n            }\r\n\r\n        }else{\r\n            //Selccione algun hijo, debo buscar los hijos asosciados al padre y el padre\r\n            const dat=data\r\n            if(opcion===1){\r\n                //console.log('opcion child selected opcion',opcion)\r\n                const Caja={...this.state.dataCaja}\r\n                //Buscando el master\r\n                for(var qq=0;qq<Caja.data.length;qq++){\r\n                    //console.log(dataCaja.data[q])\r\n                    if(parametro==='abono'){\r\n                        if(Caja.data[qq].id===data.idmatchCargo){\r\n                            //este es el master\r\n                            //console.log('este es el master',Caja.data[qq])\r\n                            Caja.data[qq].typeAbono='none'\r\n                            Caja.data[qq].usedFlagAbono=false\r\n                        }\r\n                    }else{\r\n                        if(Caja.data[qq].id===data.idmatchAbono){\r\n                            //este es el master\r\n                            //console.log('este es el master',Caja.data[qq])\r\n                            Caja.data[qq].typeCargo='none'\r\n                            Caja.data[qq].usedFlagCargo=false\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                const Banco={...this.state.dataBanco}\r\n                //Buscar los hijos\r\n                for(var oo=0;oo<Banco.data.length;oo++){\r\n                    if(parametro==='abono'){                        \r\n                        if(Banco.data[oo].id!==dat.id && Banco.data[oo].idmatchCargo*1 ===dat.idmatchCargo*1 && Banco.data[oo].usedFlagCargo=== true){\r\n                            Banco.data[oo].idmatchCargo=-1\r\n                            Banco.data[oo].usedFlagCargo=false\r\n                            Banco.data[oo].typeCargo='none'\r\n                        }\r\n                    }else{\r\n                        if(Banco.data[oo].id!==dat.id && Banco.data[oo].idmatchAbono*1===dat.idmatchAbono*1 && Banco.data[oo].usedFlagAbono=== true){\r\n                            //console.log('=>',Banco.data[oo],'idmatchAbono',Banco.data[oo].idmatchAbono)\r\n                            Banco.data[oo].idmatchAbono=-1\r\n                            Banco.data[oo].usedFlagAbono=false\r\n                            Banco.data[oo].typeAbono='none'\r\n                        }\r\n                    }\r\n                }\r\n                for(oo=0;oo<Banco.data.length;oo++){\r\n                    if(parametro==='abono'){                        \r\n                        if(Banco.data[oo].id===dat.id ){\r\n                            Banco.data[oo].idmatchCargo=-1\r\n                            Banco.data[oo].usedFlagCargo=false\r\n                            Banco.data[oo].typeCargo='none'\r\n                        }\r\n                    }else{\r\n                        if(Banco.data[oo].id===dat.id ){\r\n                            //console.log('=>',Banco.data[oo],'idmatchAbono',Banco.data[oo].idmatchAbono)\r\n                            Banco.data[oo].idmatchAbono=-1\r\n                            Banco.data[oo].usedFlagAbono=false\r\n                            Banco.data[oo].typeAbono='none'\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({dataCaja:Caja})\r\n                this.setState({dataBanco:Banco})\r\n            }else{\r\n                //console.log('opcion child selected opcion',opcion)\r\n                const Bancos={...this.state.dataBanco}\r\n                //Buscando el master\r\n                for(var ww=0;ww<Bancos.data.length;ww++){\r\n                    //console.log(dataBanco.data[w])\r\n                    if(parametro==='abono'){\r\n                        if(Bancos.data[ww].id===data.idmatchCargo){\r\n                            //este es el master\r\n                            //console.log('este es el master',Bancos.data[ww])\r\n                            Bancos.data[ww].typeAbono='none'\r\n                            Bancos.data[ww].usedFlagAbono=false\r\n                        }\r\n                    }else{\r\n                        if(Bancos.data[ww].id===data.idmatchAbono){\r\n                            //este es el master\r\n                            //console.log('este es el master',Bancos.data[ww])\r\n                            Bancos.data[ww].typeCargo='none'\r\n                            Bancos.data[ww].usedFlagCargo=false\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                //Buscar los hijos\r\n                const Cajas={...this.state.dataCaja}\r\n                for(var pp=0;pp<Cajas.data.length;pp++){\r\n                    if(parametro==='abono'){\r\n                        if(Cajas.data[pp].id!==dat.id && Cajas.data[pp].idmatchCargo===dat.idmatchCargo && Cajas.data[pp].usedFlagCargo===true){\r\n                            Cajas.data[pp].idmatchCargo=-1\r\n                            Cajas.data[pp].usedFlagCargo=false\r\n                            Cajas.data[pp].typeCargo='none'\r\n                        }\r\n                    }else{\r\n                        if(Cajas.data[pp].id!==dat.id && Cajas.data[pp].idmatchAbono===dat.idmatchAbono && Cajas.data[pp].usedFlagAbono===true){                            \r\n                            Cajas.data[pp].idmatchAbono=-1\r\n                            Cajas.data[pp].usedFlagAbono=false\r\n                            Cajas.data[pp].typeAbono='none'\r\n                        }\r\n                    }\r\n                }\r\n                for(pp=0;pp<Cajas.data.length;pp++){\r\n                    if(parametro==='abono'){\r\n                        if(Cajas.data[pp].id===dat.id ){\r\n                            Cajas.data[pp].idmatchCargo=-1\r\n                            Cajas.data[pp].usedFlagCargo=false\r\n                            Cajas.data[pp].typeCargo='none'\r\n                        }\r\n                    }else{\r\n                        if(Cajas.data[pp].id===dat.id){                            \r\n                            Cajas.data[pp].idmatchAbono=-1\r\n                            Cajas.data[pp].usedFlagAbono=false\r\n                            Cajas.data[pp].typeAbono='none'\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({dataBanco:Bancos})\r\n                this.setState({dataCaja:Cajas})\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n        const cuerpo=<tr>Cargando...</tr>;\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                \r\n                <a href={excelFile}><FaFileExcel size=\"26px\" color=\"green\"></FaFileExcel> Descagar plantilla excel</a>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"w-5\"></div>\r\n                    <div className=\"w-75\">\r\n                        \r\n                <DragAndDrop  >\r\n                    <div className=\"w-100 padding-20\"  onClick={()=>this.fileInput.click()}>\r\n                        <input\r\n                            required\r\n                            type=\"file\"\r\n                            className=\"w-100\"\r\n                            style={{display:'none'}} \r\n                            name=\"file\"\r\n                            id=\"file\"\r\n                            key=\"file\"\r\n                            onChange={(event)=>this.handleInputChange(event)}\r\n                            ref={fileInput=>this.fileInput=fileInput}\r\n                            placeholder=\"Archivo Excel\"\r\n                        />\r\n                        {'Click para cargar Excel'}\r\n                        \r\n                    </div>\r\n                </DragAndDrop>\r\n              \r\n                    </div>\r\n                    <div className=\"w-10\"></div>\r\n                    <div className=\"w-10\">\r\n                        <Checkbox></Checkbox>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                \r\n                <div className=\"row separacion_20\">\r\n                    \r\n\r\n                </div>\r\n\r\n              \r\n\r\n                <div className=\"row\" >\r\n                    <div className=\"w-45\">\r\n                    {\r\n                    (this.state.showtable ?\r\n                    <table index=\"Caja_\" key='Caja' className=\"table table-center\">\r\n                    <thead>\r\n                        <tr index={'Caja1_'} key={'Caja1'}>\r\n                            <th colSpan=\"4\">Libro Contable Empresa</th>\r\n                        </tr>\r\n                        \r\n                        <tr index={'Caja2_'} key={'Caja2'}>\r\n                            <th colSpan=\"1\">Fecha</th>\r\n                            <th colSpan=\"1\">Cargo</th>\r\n                            <th colSpan=\"1\">Abono</th>\r\n                            <th colSpan=\"1\">Descripción</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.dataCaja.data.map((data)=>\r\n                            {return(<React.Fragment>\r\n                            <tr index={'Caja_'+data.id} key={'Caja'+data.id} onClick={(e)=>this.handleObjectChange(e,data,1)} >\r\n                                <td className=\"text-izquierda\">{data.fecha}</td>\r\n                                <td className={data.usedFlagCargo===false?\"\":\"tachado\"}>{data.cargo}</td>\r\n                                <td className={data.usedFlagAbono===false?\"\":\"tachado\"}>{data.abono}</td>\r\n                                <td className=\"text-izquierda\" >{data.descripcion}</td>\r\n                                {data.usedFlag===false?null:<td>Ok</td>}                               \r\n                            </tr>\r\n                            {\r\n                                data.showOptions?\r\n                                (<React.Fragment>\r\n                                <tr className=\"background-boton\" index={'BotonCaja_'+data.id} key={'BotonCaja'+data.id}>\r\n                                    <td></td>\r\n                                    {data.usedFlagCargo===false?\r\n                                    <td>{<button onClick={(e)=>this.procesarData(e,data,1,'cargo')} > Buscar</button>}</td>\r\n                                    :\r\n                                    <td>{<button onClick={(e)=>this.restoreMatching(e,data,2,'abono')} > Deshacer</button>}</td>\r\n                                    }\r\n                                    {data.usedFlagAbono===false?\r\n                                    <td>{<button onClick={(e)=>this.procesarData(e,data,1,'abono')} > Buscar</button>}</td>\r\n                                    :\r\n                                    <td>{<button onClick={(e)=>this.restoreMatching(e,data,2,'cargo')} > Deshacer</button>}</td>\r\n                                    }\r\n                                    <td></td>\r\n                                    {data.usedFlag===false?null:<td><AiOutlineCloseCircle size={'4vh'} onClick={()=>alert()}></AiOutlineCloseCircle></td>} \r\n                                </tr>\r\n                                \r\n                                {data.loadingcajadata===true?cuerpo:null}</React.Fragment>)\r\n                                :null\r\n                            }\r\n                            </React.Fragment>);\r\n                            }\r\n                           \r\n                            \r\n                        )}\r\n\r\n                    </tbody>\r\n                </table>\r\n                            \r\n                    :null)\r\n                    }\r\n                    </div>\r\n                    <div className=\"w-10\"></div>\r\n                    <div className=\"w-45\">\r\n                    {\r\n                    (this.state.showtable?\r\n                    <table id='Banco_' key='Banco' className=\"table table-center\">\r\n                    <thead>\r\n                        <tr index={'Banco1_'} key={'Banco1'}>\r\n                            <th colSpan=\"4\">Estado de Cuenta - Extracto Bancario</th>\r\n                        </tr>\r\n                        \r\n                        <tr index={'Banco2_'} key={'Banco2'}>\r\n                            <th colSpan=\"1\">Fecha</th>\r\n                            <th colSpan=\"1\">Cargo</th>\r\n                            <th colSpan=\"1\">Abono</th>\r\n                            <th colSpan=\"1\">Descripción</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.dataBanco.data.map((data)=>\r\n                            {return(<React.Fragment>\r\n                            <tr index={'Banco_'+data.id} key={'Banco'+data.id} onClick={(e)=>this.handleObjectChange(e,data,2)} >\r\n                                <td className=\"text-izquierda\">{data.fecha}</td>\r\n                                <td className={data.usedFlagCargo===false?\"\":\"tachado\"}>{data.cargo}</td>\r\n                                <td className={data.usedFlagAbono===false?\"\":\"tachado\"}>{data.abono}</td>\r\n                                <td className=\"text-izquierda\">{data.descripcion}</td>\r\n                                {data.usedFlag===false?null:<td>Ok</td>}                                \r\n                            </tr>\r\n                            {\r\n                                data.showOptions?\r\n                                <React.Fragment>\r\n                                <tr index={'BotonBanco_'+data.id} key={'BotonBanco'+data.id} className=\"background-boton\">\r\n                                    <td></td>\r\n                                    {data.usedFlagCargo===false?\r\n                                    <td>{<button onClick={(e)=>this.procesarData(e,data,2,'cargo')} > Buscar</button>}</td>\r\n                                    :\r\n                                    <td>{<button onClick={(e)=>this.restoreMatching(e,data,1,'abono')} > Deshacer</button>}</td>\r\n                                    }\r\n                                    {data.usedFlagAbono===false?\r\n                                    <td>{<button onClick={(e)=>this.procesarData(e,data,2,'abono')} > Buscar</button>}</td>\r\n                                    :\r\n                                    <td>{<button onClick={(e)=>this.restoreMatching(e,data,1,'cargo')} > Deshacer</button>}</td>\r\n                                    }\r\n                                    <td></td>\r\n                                    {data.usedFlag===false?null:<td><AiOutlineCloseCircle size={'4vh'} onClick={()=>alert()}></AiOutlineCloseCircle></td>} \r\n                                </tr>\r\n                                \r\n                                {data.loadingbancodata===true?cuerpo:null}\r\n                                </React.Fragment>\r\n                                :null\r\n                            }\r\n                            </React.Fragment>);\r\n                            }\r\n                           \r\n                            \r\n                        )}\r\n\r\n                    </tbody>\r\n                </table>\r\n                            \r\n                    :null)\r\n                    }\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.state.showPopup ?  \r\n                    <Popup  \r\n                    contenido={this.dibujartabla()}\r\n                    titulo={'Seleccione opción'}  \r\n                    closePopup={this.togglePopup.bind(this)}  \r\n                    />\r\n                      \r\n                    : null  \r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\">\r\n                    {\r\n                        this.state.showPopupFloat?\r\n                        <Popupflotante contenido={this.dibujarListaOpciones()}\r\n                        position={this.state.positionPopup}\r\n                        titulo={'Seleccione una opción'}  \r\n                        closePopup={this.togglePopupFlotante.bind(this)} ></Popupflotante>\r\n                        :null\r\n                    }\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                \r\n\r\n                \r\n                \r\n                \r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default  XlsxUploaderV3;","import React, { Component } from 'react';\r\n//https://www.youtube.com/watch?v=RPMYV-eb6lI\r\nclass Tf_Idf extends Component{\r\n    state={\r\n        txt:[]\r\n    }\r\n    \r\n    Tf_Idf_function(){\r\n        var txt = [];\r\n        var counts = {};\r\n        var keys = [];\r\n        var allwords = [];\r\n\r\n        //var files = ['eclipse.txt', 'fish.txt','phadke.txt'];\r\n        var files = ['buenos dias su señoria matatirutirulai','The Eclipse Award Trophy is presented annually to recognize those horses and individuals whose outstanding achievements have earned them the title of Champion in their respective categories. Presently there are twenty categories that include American Horse of the Year, eleven Division Champions, five connection Champions and three miscellaneous awards.The Eclipse Awards are co-sponsored by the National Thoroughbred Racing Association, the Daily Racing Form and the National Turf Writers Association. Prior to the start of the Eclipse Awards in 1971, the TRA and the Daily Racing Form separately honored racings annual champions.[1]',\r\n        'A king was going blind. A traveller said that if a golden-headed fish, found in the Great Sea, was brought to him within a hundred days, he would prepare an ointment from its blood to save the kings sight, but he had to leave in a hundred days. The prince took men and fished for it. He finally caught it, too late to bring it back. He intended to bring it back to show his father what he had done, and decided not to, because the doctors would try to make the ointment and so kill the fish uselessly.',\r\n        'Vasudeo Balwant Phadke (About this sound pronunciation (help·info)) (4 November 1845 – 17 February 1883) was an Indian revolutionary who sought Indias independence from Britain. Phadke was moved by the plight of the farmer community during British Raj. Phadke believed that ‘Swaraj’ was the only remedy for their ills. With the help of Kolis, Bhils and Dhangars communities in Maharastra, Vasudev formed a revolutionary group called as Ramoshi. The group started an armed struggle to overthrow the British Raj. The group launched raids on rich English businessmen to obtain funds for their liberation struggle. Phadke came into limelight when he got control of the city of Pune for a few days when he caught the British soldiers off guard during one of his surprise attacks.']\r\n        \r\n        //Asignar el contenido de files en un array txt\r\n        for (var i = 0; i < files.length; i++) {\r\n            txt[i] = files[i];\r\n        }\r\n        //Se asigna todo el contenido en allwords\r\n        for (i = 0; i < txt.length; i++) {\r\n            //allwords[i] = (txt[i].join('/n'))\r\n            allwords[i] = (txt[i])\r\n        }\r\n\r\n\r\n        //Define Term frecuency\r\n        //Tokens\r\n        //https://stackoverflow.com/questions/3559883/javascript-split-regex-question\r\n        var tokens = allwords[0].split(/\\W+/);\r\n        console.log('tokens',tokens)\r\n        for (i = 0; i < tokens.length; i++) {\r\n            var word = tokens[i].toLowerCase();\r\n            //Si la palabra no esta en el objeto counts crear objeto\r\n            if (counts[word] === undefined) {\r\n            //Create an object \r\n            counts[word] = {\r\n                tf: 1,\r\n                df: 1\r\n            };\r\n            keys.push(word);\r\n            } else {\r\n            //Sino aumentar el numero de veces que aparece la palabra(term frecuency)\r\n            counts[word].tf = counts[word].tf + 1;\r\n            }\r\n        }\r\n\r\n        //Counts es la lista objetos que tiene como indice [word] y propiedades tf(term frec) df(doc frec)\r\n        console.log('counts',counts)\r\n        //la variable key contiene una lista de palabra unicas(sin repetir)\r\n        console.log('keys',keys)\r\n        \r\n        //Look up for every word each appear in docs\r\n        //Define in how many docs  appear a word\r\n        var othercounts = [];\r\n        for (var j = 1; j < allwords.length; j++) {\r\n          var tempcounts = {};\r\n          var tokens_ = allwords[j].split(/\\W+/);\r\n          for (var k = 0; k < tokens_.length; k++) {\r\n            var w = tokens_[k].toLowerCase();\r\n            if (tempcounts[w] === undefined) {\r\n              tempcounts[w] = true;\r\n            }\r\n          }\r\n          othercounts.push(tempcounts);\r\n        }\r\n        //othercounts contiene una lista de palabra unicas(sin repetir) como indice con la propiedad true\r\n        console.log('othercounts',othercounts)\r\n        \r\n\r\n        for ( i = 0; i < keys.length; i++) {\r\n            var word_ = keys[i];\r\n            for ( j = 0; j < othercounts.length; j++) {\r\n              var tempcounts_ = othercounts[j];\r\n              //Buscar la palabra\r\n              if (tempcounts_[word]) {\r\n                //Document frecuency\r\n                counts[word_].df++;\r\n              }\r\n            }\r\n        }\r\n\r\n        for ( i = 0; i < keys.length; i++) {\r\n        var word_2 = keys[i];\r\n        var wordobj = counts[word_2];\r\n        //In order to wikipedia files.length / (wordobj.df +1) to avoid divide by 0 'zero'\r\n        //wordobj.tfidf = wordobj.tf * Math.log(files.length / wordobj.df);\r\n        wordobj.tfidf = wordobj.tf * Math.log(files.length / (wordobj.df+1));\r\n        }\r\n        //Ordena de mayor a menor segun la propiedad tfidf\r\n        keys.sort(compare);\r\n        \r\n        function compare(a, b) {\r\n        var countA = counts[a].tfidf;\r\n        var countB = counts[b].tfidf;\r\n        return countB - countA;\r\n        }\r\n        \r\n\r\n        console.log('counts',counts)\r\n        console.log('keys.sort',keys.sort(compare))\r\n        /*\r\n        for ( i = 0; i < keys.length; i++) {\r\n        var key_2 = keys[i];\r\n        console.log(key_2 + ' ' + counts[key_2].tfidf)\r\n        //createDiv(key + ' ' + counts[key_2].tfidf);\r\n        }\r\n        */\r\n        \r\n\r\n          \r\n\r\n    }\r\n    componentDidMount(){\r\n        this.Tf_Idf_function()\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <React.Fragment>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Tf_Idf;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport CvsUploader from './Component/CvsUploader';\n//import XlsxUploader from './Component/XlsxUploader';\n\n//import FileList from './Component/FileList';\nimport FileListMain from './Component/DragAndDrop/FileListMain';\nimport XlsxUploaderV3 from './Component/XlsxUploaderV3';\nimport TfIdf from './Component/Tf_Idf/Tf_Idf'\n\n\n//import SubsetSum from './Component/SumSubset';\n\nfunction App() {\n  /*\n  const inputByUser=[2,10,15,11,7,5,9,13,8,20]\n  //var arrayFlag=[0,0,0,0,0,0,0,0,0,0]\n  //Define un array de valores de tamaño igual a inputByUser\n  var arrayFlag=[]\n  arrayFlag.length=inputByUser.length\n  console.log('arrayFlag',arrayFlag)\n  \n  const proposedSum=50\n  console.log('proposedSum',proposedSum)\n\n  \n  const resultado= SubsetSum(inputByUser,arrayFlag,proposedSum)\n  //Ojo puede devolver undefined en algunos indices dado que el array arrayFlag se creo vacio\n  console.log('resultado',resultado)\n\n  */\n  return (\n    <div className=\"App\">\n      {/*\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      */\n      }\n      <TfIdf></TfIdf>\n      {/*<CvsUploader className=\"row\"></CvsUploader>\n      <FileListMain className=\"row\"></FileListMain>*/}\n      \n      <div className=\"row\">\n        \n        <XlsxUploaderV3 ></XlsxUploaderV3>\n       \n       \n        \n      </div>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}